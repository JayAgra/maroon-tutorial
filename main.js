/*jslint es6*/
/*jslint browser: true*/

//quiz ids are generated by require('crypto').randomBytes(16).toString('hex') with node.js
//quiz answers are stored in browser because results dont actually matter
//ugly solution for attempt number- store in custom data attribure
/**
 *
 * @param {string} id - unique quiz ID
 * @param {HTMLElement} button - button html element
 */

function runQuiz(id, button) {
    var answer = document.getElementById(id).getAttribute("data-answer")
    var selected = document.querySelector(`input[name="${id}-radio"]:checked`);
    if (selected.value === answer) {
        document.getElementsByName(`${id}-radio`).forEach(box => box.disabled = true)
        button.setAttribute("data-attempts", Number(button.getAttribute("data-attempts")) + 1)
        button.disabled = true;
        selected.parentElement.style.color = "#0f0";
        if (button.getAttribute("data-attempts") === "1") {
          button.innerHTML = "correct on first try";
          button.style.color = "#0f0";
        } else if (button.getAttribute("data-attempts") === "4") {
          button.innerHTML = "failed";
          button.style.color = "#f00";
        } else {
          button.innerHTML = "correct in " + button.getAttribute("data-attempts") + " tries";
          button.style.color = "#ff0";
        }
    } else {
        button.setAttribute("data-attempts", Number(button.getAttribute("data-attempts")) + 1)
        selected.parentElement.style.color = "#f00";
        selected.disabled = "true";
    }
}

//need to finish this function to allow page navigation with forward and back buttons
/**
 *
 * @param {boolean} forward - should the page move forward? if false, page moves backward.
 * @returns nothing honestly
 */

function changePage(forward) {
  return;
}

//captures page forward and backward shortcuts
document.addEventListener('keydown', function(event) {
  if (event.metaKey && event.key === "ArrowLeft") {
    history.back();
  } else if (event.metaKey && event.key === "ArrowRight") {
    history.forward();
  }
});

function disableHome() {
  if (document.getElementById("article").getAttribute("data-page") === "toc") {
    document.getElementById("homeButton").disabled = "true";
    document.getElementById("homeButton").onclick = '';
    document.getElementById("homeButton").style.color = "gray";
  } else {
    document.getElementById("homeButton").removeAttribute("disabled")
    document.getElementById("homeButton").onclick = function(){renderHTML("toc")};
    document.getElementById("homeButton").style.color = "#2997ff"; //ffd82c
  }
}

//to add: service worker for ability to access comepletely offline.